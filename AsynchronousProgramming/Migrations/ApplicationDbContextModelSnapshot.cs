// <auto-generated />
using System;
using AsynchronousProgramming.Infrastructure.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace AsynchronousProgramming.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    partial class ApplicationDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AsynchronousProgramming.Models.Entities.Concrete.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 749, DateTimeKind.Local).AddTicks(8146),
                            Name = "Elektronik",
                            Slug = "elektronik",
                            Status = 1
                        },
                        new
                        {
                            Id = 2,
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 752, DateTimeKind.Local).AddTicks(1729),
                            Name = "Beyaz Eşya",
                            Slug = "beyaz eşya",
                            Status = 1
                        },
                        new
                        {
                            Id = 3,
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 752, DateTimeKind.Local).AddTicks(1747),
                            Name = "Mobilya",
                            Slug = "mobilya",
                            Status = 1
                        });
                });

            modelBuilder.Entity("AsynchronousProgramming.Models.Entities.Concrete.Page", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Content")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Pages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Content = "Favoriler",
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 753, DateTimeKind.Local).AddTicks(6578),
                            Slug = "favoriler",
                            Status = 1,
                            Title = "Favoriler"
                        },
                        new
                        {
                            Id = 2,
                            Content = "Sepet",
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 753, DateTimeKind.Local).AddTicks(7284),
                            Slug = "sepet",
                            Status = 1,
                            Title = "Sepet"
                        },
                        new
                        {
                            Id = 3,
                            Content = "Home",
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 753, DateTimeKind.Local).AddTicks(7289),
                            Slug = "home",
                            Status = 1,
                            Title = "Home"
                        });
                });

            modelBuilder.Entity("AsynchronousProgramming.Models.Entities.Concrete.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeleteDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Slug")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<decimal>("UnitPrice")
                        .HasColumnType("decimal");

                    b.Property<DateTime?>("UpdateDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 753, DateTimeKind.Local).AddTicks(3312),
                            Description = "Monster-Laptop",
                            Name = "Laptop",
                            Slug = "laptop",
                            Status = 1,
                            UnitPrice = 0m
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 753, DateTimeKind.Local).AddTicks(4278),
                            Description = "Buzdolabı",
                            Name = "Buzdolabı",
                            Slug = "buzdolabı",
                            Status = 1,
                            UnitPrice = 0m
                        },
                        new
                        {
                            Id = 3,
                            CategoryId = 3,
                            CreateDate = new DateTime(2023, 3, 16, 3, 49, 22, 753, DateTimeKind.Local).AddTicks(4284),
                            Description = "Yemek masası",
                            Name = "Masa",
                            Slug = "masa",
                            Status = 1,
                            UnitPrice = 0m
                        });
                });

            modelBuilder.Entity("AsynchronousProgramming.Models.Entities.Concrete.Product", b =>
                {
                    b.HasOne("AsynchronousProgramming.Models.Entities.Concrete.Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("AsynchronousProgramming.Models.Entities.Concrete.Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
